  if (stage === "cake") {
    return (
      <div className="min-h-screen bg-gradient-to-br from-indigo-600 via-purple-500 to-pink-400 flex flex-col items-center justify-center p-8 overflow-hidden">
        <div className="absolute top-0 left-0 w-full h-full overflow-hidden pointer-events-none">
          {[...Array(20)].map((_, i) => (
            <div
              key={i}
              className="absolute text-4xl animate-float"
              style={{
                left: `${Math.random() * 100}%`,
                top: `${Math.random() * 100}%`,
                animationDelay: `${Math.random() * 5}s`,
                animationDuration: `${5 + Math.random() * 5}s`,
              }}
            >
              {["🎈", "🎉", "🎊", "✨", "🌟"][Math.floor(Math.random() * 5)]}
            </div>
          ))}
        </div>

        <div className="relative z-10 backdrop-blur-sm bg-white/5 rounded-3xl p-8 shadow-2xl">
          <h2 className="text-4xl font-bold text-white mb-8 text-center drop-shadow-lg">
            {candleStates.every((s) => s)
              ? "🌬️ Tiup Lilinnya! (Swipe ke Atas)"
              : "🔥 Nyalakan Lilinnya!"}
          </h2>

          <div className="relative">
            {/* Candles */}
            <div
              className="relative z-20"
              onTouchStart={handleAreaTouchStart}
              onTouchEnd={handleAreaTouchEnd}
              onMouseDown={handleAreaMouseDown}
              onMouseUp={handleAreaMouseUp}
            >
              <div className="flex gap-16 mb-4 justify-center">
                <div className="flex gap-16 mb-4 justify-center relative z-20">
                  {[0, 1, 2].map((index) => (
                    <div
                      key={index}
                      className="flex flex-col items-center cursor-pointer transform hover:scale-110 transition-transform"
                      onClick={() =>
                        !candleStates[index] && toggleCandle(index)
                      }
                      onTouchStart={(e) => handleCandleTouchStart(e, index)}
                      onTouchEnd={(e) => handleCandleTouchEnd(e, index)}
                      onMouseDown={(e) => handleCandleMouseDown(e, index)}
                      onMouseUp={(e) => handleCandleMouseUp(e, index)}
                    >
                      {candleStates[index] && (
                        <div className="relative">
                          <Flame
                            className="text-orange-400 animate-bounce mb-1 drop-shadow-lg"
                            size={40}
                            fill="#fbbf24"
                          />
                          <div className="absolute inset-0 blur-xl bg-orange-400 opacity-50 animate-pulse"></div>
                        </div>
                      )}
                      <div className="w-5 h-28 bg-gradient-to-b from-pink-200 via-pink-300 to-pink-400 rounded-full shadow-xl border-2 border-pink-500/30 relative overflow-hidden">
                        <div className="absolute top-0 left-1/2 w-1 h-full bg-white/40 transform -translate-x-1/2"></div>
                      </div>
                      <div className="w-6 h-2 bg-gradient-to-b from-pink-400 to-pink-500 rounded-full -mt-1"></div>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            {/* Cake */}
            <div className="relative">
              {/* Top Layer - Strawberry */}
              <div className="relative w-80 h-28 bg-gradient-to-br from-pink-300 via-pink-400 to-rose-400 rounded-2xl shadow-2xl mx-auto overflow-hidden border-4 border-pink-200/50">
                <div className="absolute inset-0 bg-white/10 backdrop-blur-sm"></div>
                {/* Frosting decoration */}
                <div className="absolute top-0 left-0 right-0 flex justify-around items-start pt-2">
                  {[...Array(12)].map((_, i) => (
                    <div
                      key={i}
                      className="w-6 h-8 bg-gradient-to-b from-white to-pink-100 rounded-b-full shadow-md"
                    ></div>
                  ))}
                </div>
                {/* Strawberries */}
                <div className="absolute bottom-4 left-0 right-0 flex justify-around px-6">
                  {[...Array(5)].map((_, i) => (
                    <div
                      key={i}
                      className="text-3xl animate-bounce"
                      style={{ animationDelay: `${i * 0.2}s` }}
                    >
                      🍓
                    </div>
                  ))}
                </div>
              </div>

              {/* Middle Layer - Chocolate */}
              <div className="relative w-96 h-32 bg-gradient-to-br from-amber-700 via-amber-800 to-amber-900 rounded-2xl shadow-2xl -mt-3 mx-auto overflow-hidden border-4 border-amber-600/50">
                <div className="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>
                {/* Frosting waves */}
                <div className="absolute top-0 left-0 right-0 flex justify-around">
                  {[...Array(14)].map((_, i) => (
                    <div
                      key={i}
                      className="w-5 h-10 bg-gradient-to-b from-amber-400 to-amber-600 rounded-b-full shadow-lg"
                    ></div>
                  ))}
                </div>
                {/* Text */}
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="text-white text-2xl font-bold drop-shadow-lg bg-amber-900/30 px-6 py-2 rounded-full backdrop-blur-sm border-2 border-amber-400/30">
                    🎉 Happy Birthday 🎉
                  </div>
                </div>
              </div>

              {/* Bottom Layer - Vanilla */}
              <div className="relative w-[28rem] h-36 bg-gradient-to-br from-yellow-200 via-amber-200 to-orange-200 rounded-2xl shadow-2xl -mt-3 mx-auto overflow-hidden border-4 border-yellow-300/50">
                <div className="absolute inset-0 bg-gradient-to-t from-orange-300/30 to-transparent"></div>
                {/* Bottom frosting */}
                <div className="absolute top-0 left-0 right-0 flex justify-around">
                  {[...Array(16)].map((_, i) => (
                    <div
                      key={i}
                      className="w-5 h-12 bg-gradient-to-b from-white to-yellow-100 rounded-b-full shadow-lg"
                    ></div>
                  ))}
                </div>
                {/* Decorative dots */}
                <div className="absolute bottom-6 left-0 right-0 flex justify-around px-8">
                  {[...Array(10)].map((_, i) => (
                    <div
                      key={i}
                      className="w-4 h-4 bg-gradient-to-br from-pink-400 to-rose-500 rounded-full shadow-lg border-2 border-white"
                    ></div>
                  ))}
                </div>
              </div>

              {/* Cake Stand - Modern */}
              <div className="relative w-[30rem] h-8 bg-gradient-to-br from-slate-200 via-slate-300 to-slate-400 rounded-full mx-auto -mt-2 shadow-2xl border-4 border-slate-100/50">
                <div className="absolute inset-0 bg-gradient-to-t from-slate-500/30 to-transparent rounded-full"></div>
                <div className="absolute inset-x-0 top-1/2 h-0.5 bg-white/40 rounded-full"></div>
              </div>
            </div>
          </div>
        </div>

        <p className="text-white text-lg font-medium mt-8 text-center max-w-md drop-shadow-lg bg-white/10 backdrop-blur-sm px-6 py-3 rounded-full border-2 border-white/20 relative z-10">
          💡 Klik lilin untuk menyalakan, swipe ke atas untuk meniup!
        </p>

        <style jsx>{`
          @keyframes float {
            0%,
            100% {
              transform: translateY(0) rotate(0deg);
              opacity: 0.6;
            }
            50% {
              transform: translateY(-30px) rotate(180deg);
              opacity: 1;
            }
          }
          .animate-float {
            animation: float linear infinite;
          }
        `}</style>
      </div>
    );
  }